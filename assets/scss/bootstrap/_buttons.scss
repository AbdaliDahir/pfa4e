/*------------------------------------
	Buttons
------------------------------------*/
.btn {
	background: transparent;
	outline: none !important;
	vertical-align: middle;
	margin-bottom: .5rem;
	font-family: FX__get($FX-font-families, button);

	&:focus:not(.active) {
		box-shadow: none !important;
	}
}

// Default button
.btn.btn-default {
	border: 0;
	background: transparent;
	color: FX__color_base(label, 2);
	border: 1px solid FX__color_base(shape, 2);

	i {
		color: FX__color_base(shape, 3);
	}

	.show>&,
	&.active,
	&:active,
	&:hover {
		i {
			color: FX__color_brand(inverse);
		}

		color: FX__color_brand(inverse);
		background: FX__color_brand();
		border-color: FX__color_brand();
	}
}

// Secondary button
.btn-secondary {
	background-color: transparent;
	border: 1px solid $input-border-color;
	color: $btn-secondary-color;

	.show>&.dropdown-toggle,
	&:focus,
	&.active,
	&:active,
	&:hover {
		color: $btn-secondary-color;
		border-color: $input-border-color;
		background-color: $btn-secondary-hover-bg-color;
	}
}

// Button states
@each $name,
$color in join($FX-colors-state, $FX-colors-media) {
	.btn-#{$name} {
		@include button_variant(FX__get($color, base), FX__get($color, base));
		color: FX__get($color, inverse);

		@if $name==light {

			.show>&.dropdown-toggle,
			&:focus,
			&.active,
			&:active,
			&:hover {
				background-color: FX__color_base(grey, 1);
				border-color: FX__color_base(grey, 1);
			}
		}

		&+.btn.dropdown-toggle {
			position: relative;

			&:before {
				display: block;
				content: ' ';
				// border-left: 1px solid FX__get($color, inverse);
				position: absolute;
				top: 3px;
				left: -1px;
				bottom: 3px;
				opacity: 0.3;
			}

			&:hover,
			&:focus,
			&.active {
				&:before {
					display: none;
				}
			}
		}
	}
}

// Outline states
@each $name,
$color in $FX-colors-state {
	.btn-outline-#{$name} {
		@include button-outline-variant(FX__get($color, base), FX__get($color, inverse));
	}
}

// Hover states
@each $name,
$color in $FX-colors-state {
	.btn-hover-#{$name} {
		.show>&,
		&.active,
		&:active,
		&:hover {
			color: FX__get($color, inverse);
			background-color: FX__get($color, base);
			border-color: FX__get($color, base);
		}
	}

	.btn-outline-hover-#{$name} {
		&.btn-clean {
			border: 1px solid transparent;
		}

		.show>&,
		&.active,
		&:active,
		&:hover {
			color: FX__get($color, base);
			border-color: FX__get($color, base);
			background-color: transparent;
		}
	}
}

// Font states
@each $name,
$color in $FX-colors-state {
	.btn-font-#{$name} {
		color: FX__get($color, base);
	}

	.btn-font-hover-#{$name} {

		.show>&,
		&.active,
		&:active,
		&:hover {
			color: FX__get($color, base);
		}
	}
}

// Secondary outline button
.btn.btn-outline-secondary {
	color: darken(FX__get($theme-colors, secondary), 50%);

	.show>&,
	&.active,
	&:active,
	&:hover {
		background-color: FX__get($theme-colors, secondary);
		//color: #fff;
	}
}

// Custom sizing
.btn {
	&.btn-wide {
		padding-left: 2rem;
		padding-right: 2rem;
	}

	&.btn-wider {
		padding-left: 2.5rem;
		padding-right: 2.5rem;
	}

	&.btn-widest {
		padding-left: 3rem;
		padding-right: 3rem;
	}

	&.btn-tall {
		padding-top: 0.85rem;
		padding-bottom: 0.85rem;
	}

	&.btn-taller {
		padding-top: 1.15rem;
		padding-bottom: 1.15rem;
	}

	&.btn-tallest {
		padding-top: 1.35rem;
		padding-bottom: 1.35rem;
	}
}

// Shadow buttons
.btn {

	// Shadow 1
	&.btn-shadow {
		transition: all 0.3s ease 0s;
	}
	&.btn-up {
		transition: all 0.3s ease 0s;
		&:hover {
			transform: translate(0, -4px);
		}
	}
	&.btn-dashed {
		border-style: dashed !important;
	}

	@each $name,
	$color in $FX-colors-state {
		$base-color: FX__get($color, base);

		@if $name==light {
			$base-color: #999999;
		}

		&.btn-#{$name}.btn-shadow,
		&.btn-soft-#{$name}.btn-shadow,
		&.btn-outline-#{$name}.btn-shadow {
			box-shadow: 0px 4px 16px 0px rgba($base-color, 0.15);

			.show > &,
			&:focus,
			&.active,
			&:active,
			&:hover {
				box-shadow: 0px 9px 16px 0px rgba($base-color, 0.25) !important;

				&.btn-sm {
					box-shadow: 0px 6px 16px 0px rgba($base-color, 0.25) !important;
				}

				@if $name==light {
					background-color: transparent;
					border-color: transparent;
				}
			}
		}

		&.btn-#{$name}.btn-shadow-hover,
		&.btn-soft-#{$name}.btn-shadow-hover,
		&.btn-outline-#{$name}.btn-shadow-hover {

			.show>&,
			&.active,
			&:focus,
			&:active,
			&:hover {
				box-shadow: 0px 9px 16px 0px rgba($base-color, 0.25) !important;

				&.btn-sm {
					box-shadow: 0px 6px 16px 0px rgba($base-color, 0.25) !important;
				}

				@if $name==light {
					background-color: transparent;
					border-color: transparent;
				}
			}
		}
	}
}

// Square && pill buttons
.btn {
	&.btn-square {
		border-radius: 0;
	}
	&.btn-pill {
		border-radius: 2rem;
	}
}

// Button with icon
.btn {
	//display: inline-flex;
	align-items: center;

	i,
	svg {
		vertical-align: middle;
		line-height: 0;
		font-size: 1.2rem;
	}

	&.btn-sm {
		i,
		svg {
			padding-right: 0.35rem;
			font-size: 1.2rem;
		}
	}

	&.btn-lg {
		i,
		svg {
			padding-right: 0.75rem;
			font-size: 1.4rem;
		}
	}
}

// Soft button
.btn.btn-soft {
	background-color: FX__color_base(shape, 1);
	color: FX__color_brand();
	cursor: text !important;
}

.btn.btn-link,
a.btn.btn-soft,
button.btn.btn-soft,
input.btn.btn-soft {
	cursor: pointer !important;

	&:focus,
	&:hover,
	&.active {
		background-color: FX__color_brand();
		color: FX__color_brand(inverse);
	}
}

// Label button states
@each $name,
$color in join($FX-colors-state, $FX-colors-media) {
	.btn.btn-soft-#{$name} {
		background-color: rgba(FX__get($color, base), 0.1);
		color: FX__get($color, base);
		cursor: text !important;
	}

	.btn.btn-soft-#{$name}-o2 {
		background-color: rgba(FX__get($color, base), 0.2);
		color: FX__get($color, base);
		cursor: text !important;
	}

	a.btn.btn-soft-#{$name},
	button.btn.btn-soft-#{$name},
	input.btn.btn-soft-#{$name} {
		cursor: pointer !important;

		&:focus,
		&:hover,
		&.active {
			background-color: FX__get($color, base);
			color: FX__get($color, inverse);
		}
	}
}

// Button with icon only
.btn.btn-icon {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	padding: 0;

	&.btn-circle {
		border-radius: 50%;
	}

	i,
	svg {
		padding: 0;
		margin: 0;
		line-height: 0;
	}

	[class^="socicon-"],
	[class*=" socicon-"] {
		line-height: 1;
	}

	& {
		height: 3rem;
		width: 3rem;
	}

	&.btn-sm {
		height: 2.5rem;
		width: 2.5rem;
	}

	&.btn-lg {
		height: 4rem;
		width: 4rem;
	}

	// Icon sizing
	&.btn-icon-sm {
		font-size: 1.15rem;
	}

	// Icon sizing
	&.btn-icon-md {
		font-size: 1.2rem;
	}

	&.btn-icon-lg {
		font-size: 1.4rem;
	}

	// Icon button states
	@each $name,
	$color in $FX-colors-state {
		&.btn-#{$name} {
			i {
				color: FX__get($color, inverse);
			}

			&:focus,
			&:hover,
			&.active {
				i {
					color: FX__get($color, inverse);
				}
			}
		}
	}
}

// Same height with icon btn
.btn-icon-h {
	& {
		height: 3rem;
	}

	&.btn-sm {
		height: 2.25rem;
	}

	&.btn-lg {
		height: 4rem;
	}
}

// Input group workarounds
.input-group-append,
.input-group-prepend {
	.btn.btn-icon {
		height: auto;
	}
}

// Button Loading
.btn.fx-loading {
	& {
		&:not(.fx-loading-center) {
			padding-left: 3 * $input-btn-padding-x;

			&:before {
				left: $input-btn-padding-x;
			}
		}

		// Right
		&.fx-loading-right {
			padding-left: $input-btn-padding-x;
			padding-right: 3 * $input-btn-padding-x;

			&:before {
				left: auto;
				right: $input-btn-padding-x;
			}
		}
	}
	&.fx-spinner-lg {
		&:not(.fx-loading-center) {
			padding-left: 3.2 * $input-btn-padding-x;

			&:before {
				left: $input-btn-padding-x;
			}
		}

		// Right
		&.fx-loading-right {
			padding-left: $input-btn-padding-x;
			padding-right: 3.2 * $input-btn-padding-x;

			&:before {
				left: auto;
				right: $input-btn-padding-x;
			}
		}
	}
}

// vertical button
.btn-group-vertical {
	button {
		margin-bottom: 0px !important;
	}
}